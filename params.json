{
  "name": "DoSnapshot",
  "tagline": "A command-line snapshot maker for your DigitalOcean droplets. Fully Automated. Multi-threaded.",
  "body": "[![Join the chat at https://gitter.im/merqlove/do_snapshot](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/merqlove/do_snapshot?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n[Project Page at Digital Ocean](https://www.digitalocean.com/community/projects/dosnapshot), comment or vote for this project.\r\n\r\n[![Gem Version](https://badge.fury.io/rb/do_snapshot.svg)](http://badge.fury.io/rb/do_snapshot)\r\n[![Build Status](https://travis-ci.org/merqlove/do_snapshot.svg?branch=master)](https://travis-ci.org/merqlove/do_snapshot)\r\n[![Dependency Status](https://gemnasium.com/merqlove/do_snapshot.svg)](https://gemnasium.com/merqlove/do_snapshot)\r\n[![Coverage Status](https://coveralls.io/repos/merqlove/do_snapshot/badge.png?branch=master)](https://coveralls.io/r/merqlove/do_snapshot?branch=master)\r\n[![Inline docs](http://inch-ci.org/github/merqlove/do_snapshot.png?branch=master)](http://inch-ci.org/github/merqlove/do_snapshot)\r\n[![Code Climate](https://codeclimate.com/github/merqlove/do_snapshot.png)](https://codeclimate.com/github/merqlove/do_snapshot)\r\n\r\nUse this tool to backup DigitalOcean droplet's via snapshot method, on the fly!\r\n\r\n## API Changes: \r\n- 03.08.16: DO now automagically keeps our droplets running when snapshot is processing, so:  \r\n  Added options `--shutdown`, `--no-shutdown`.    \r\n  `shutdown` now disabled by default, no downtime anymore, `YES`!  \r\n  If you want `shutdown` back use `--shutdown` option.\r\n- 08.01.16: now we have to use DO API V2 only, because V1 is not work anymore.\r\n- 17.10.15: now we use DO API V2 by default, due V1 deprecation at 11.2015.\r\n\r\nHere are some features:\r\n\r\n- Multiple threads out of the box, no matter how many droplets you have.\r\n- Snapshots Auto-Cleanup.\r\n- Auto-Boot Droplet if Snapshot Event fails or encounters a bad connection exception.\r\n- Special binaries for cron and command-line, Homebrew, and standalone installers.\r\n- Mail notifications when a snapshot fails or the maximum number of snapshots is reached for a droplet or droplets.\r\n- Custom mail settings (You can set [Pony](https://github.com/benprew/pony) mail settings).\r\n- Stop mode (automatically stop creating new snapshots when the maximum is reached).\r\n- Timeout option for long requests or uncaught loops. Defaults to 600 seconds, but can be changed.\r\n- Logging into selected directory.\r\n- Verbose mode for research.\r\n- Quiet mode for silence.\r\n\r\n## Compatibility\r\n\r\nRuby versions 1.9.3 and higher. JRuby 1.7, 9.0.0.0 or later is also supported.\r\n\r\n<img src=\"https://raw.githubusercontent.com/merqlove/do_snapshot/master/assets/example.png\" style=\"max-width:100%\" alt=\"DoSnaphot example\">\r\n\r\n## Installation\r\n\r\nInstall it yourself as:\r\n\r\n    $ gem install do_snapshot\r\n    \r\nSystem Wide Install (OSX, *nix):\r\n  \r\n    $ sudo gem install do_snapshot\r\n        \r\nFor **OSX** users ([Homebrew Tap](http://github.com/merqlove/homebrew-do-snapshot)):\r\n\r\n    $ brew tap merqlove/do-snapshot && brew install do_snapshot\r\n    \r\n    $ do_snapshot -V\r\n\r\nStandalone with one-liner:\r\n\r\n    $ wget https://assets.merqlove.ru.s3.amazonaws.com/do_snapshot/do_snapshot.tgz && sudo tar -xzf do_snapshot.tgz /usr/local/lib/ && sudo ln -s /usr/local/lib/do_snapshot/bin/do_snapshot /usr/local/bin/do_snapshot\r\n\r\nStandalone pack for **Unix/Linux** users: [Download](https://assets.merqlove.ru.s3.amazonaws.com/do_snapshot/do_snapshot.tgz)\r\n \r\n    $ wget https://assets.merqlove.ru.s3.amazonaws.com/do_snapshot/do_snapshot.tgz # if not done.\r\n    \r\n    # Example Install into /usr/local\r\n    \r\n    $ tar -xzf do_snapshot.tgz /usr/local/ && ln -s /usr/local/do_snapshot/bin/do_snapshot /usr/local/bin/do_snapshot \r\n    $ do_snapshot help      \r\n\r\nStandalone Zip pack for others: [Download](https://assets.merqlove.ru.s3.amazonaws.com/do_snapshot/do_snapshot.zip)\r\n    \r\n## Usage\r\n\r\nMainly it's pretty simple:\r\n\r\n    $ do_snapshot --only 123456 -k 5 -c -v\r\n\r\n### Setup \r\n\r\n### Digitalocean API V2 (default):\r\nYou'll need to generate an access token in Digital Ocean's control panel at https://cloud.digitalocean.com/settings/applications\r\n    \r\n    $ export DIGITAL_OCEAN_ACCESS_TOKEN=\"SOMETOKEN\"\r\n    \r\nIf you want to set keys without environment, than set it via options when you run do_snapshot:\r\n    \r\n    $ do_snapshot --digital-ocean-access-token YOURLONGTOKEN   \r\n\r\n### How-To \r\n\r\n##### Tutorials: \r\n- [Automate Taking Snapshots of Your DigitalOcean Droplets with DOSnapshot\r\n, Tyler Longren](https://longren.io/automate-making-snapshots-of-your-digitalocean-droplets/)\r\n- [How to Automate Taking Digital Ocean Droplet Snaphot with DoSnapShot Script, Arun Kumar](http://www.ashout.com/automate-digital-ocean-droplet-snaphot/)\r\n\r\nHere we `keeping` only 5 **latest** snapshots and cleanup older after new one is created. If creation of snapshots failed no one will be deleted. By default we keeping `10` droplets.\r\n\r\n    $ do_snapshot --keep 5 -c\r\n    \r\nKeep latest 3 from selected droplet:\r\n  \r\n    $ do_snapshot --only 123456 --keep 3\r\n  \r\nWorking with all except droplets:\r\n  \r\n    $ do_snapshot --exclude 123456 123457\r\n  \r\nKeep latest 5 snapshots, send mail notification instead of creating new one:\r\n  \r\n    $ do_snapshot --keep 10 --stop --mail to:yourmail@example.com\r\n    \r\n<img src=\"https://raw.githubusercontent.com/merqlove/do_snapshot/master/assets/safe_mode.png\" style=\"max-width:100%\" alt=\"DoSnapshot Safe Mode Example\">\r\n    \r\nE-mail notifications disabled out of the box. \r\nFor working mailer you need to set e-mail settings via run options.\r\n\r\n    --mail to:mail@somehost.com from:from@host.com --smtp address:smtp.gmail.com port:25 user_name:someuser password:somepassword\r\n\r\n### Cron example\r\n\r\n    0 4 * * 7 . /.../.digitalocean_keys && /.../bin/do_snapshot -k 5 -m to:TO from:FROM -t address:HOST user_name:LOGIN password:PASSWORD port:2525 -q -c\r\n\r\n### Real world example\r\n\r\n    $ bin/do_snapshot --only 123456 -k 3 -c -m to:TO from:FROM -t address:HOST user_name:LOGIN password:PASSWORD port:2525 -v\r\n    \r\n    Checking DigitalOcean Id's.\r\n    Start performing operations\r\n    Setting DigitalOcean Id's.\r\n    Loading list of DigitalOcean droplets\r\n    Working with list of DigitalOcean droplets\r\n    Preparing droplet id: 123456 name: mrcr.ru to take snapshot.\r\n    Shutting down droplet.\r\n    Start creating snapshot for droplet id: 123456 name: mrcr.ru.\r\n    Wait until snapshot will be created.\r\n    Snapshot name: mrcr.ru_2014_07_18 created successfully.\r\n    Droplet id: 123456 name: mrcr.ru snapshots: 4.\r\n    For droplet with id: 123456 and name: mrcr.ru the maximum number 3 of snapshots is reached.\r\n    Cleaning up snapshots for droplet id: 123456 name: mrcr.ru.\r\n    Snapshot name: mrcr.ru_2014_07_17 delete requested.\r\n    All operations has been finished.\r\n    Sending e-mail notification.\r\n\r\n### All options:    \r\n\r\n    > $ do_snapshot c  \r\n    \r\n    aliases: s, snap, create\r\n    \r\n    Options:\r\n      -p, [--protocol=1]                                             # Select api version.\r\n                                                                     # Default: 2\r\n          [--shutdown], [--no-shutdown]                              # Check if you want to stop your droplet before the snapshot.\r\n      -o, [--only=123456 123456 123456]                              # Select some droplets.\r\n      -e, [--exclude=123456 123456 123456]                           # Except some droplets.\r\n      -k, [--keep=5]                                                 # How much snapshots you want to keep?\r\n                                                                     # Default: 10\r\n      -d, [--delay=5]                                                # Delay between snapshot operation status requests.\r\n                                                                     # Default: 10                                                                    \r\n          [--timeout=250]                                            # Timeout in sec's for events like Power Off or Create Snapshot.\r\n                                                                     # Default: 3600                                                                     \r\n      -m, [--mail=to:yourmail@example.com]                           # Receive mail if fail or maximum is reached.\r\n      -t, [--smtp=user_name:yourmail@example.com password:password]  # SMTP options.\r\n      -l, [--log=/Users/someone/.do_snapshot/main.log]               # Log file path. By default logging is disabled.\r\n      -c, [--clean], [--no-clean]                                    # Cleanup snapshots after create. If you have more images than you want to `keep`, older will be deleted.\r\n      -s, [--stop], [--no-stop]                                      # Stop creating snapshots if maximum is reached.\r\n          [--stop-by-power], [--no-stop-by-power]                    # Droplet stop method, by it's power status (instead of waiting for event completed state).\r\n      -v, [--trace], [--no-trace]                                    # Verbose mode.\r\n      -q, [--quiet], [--no-quiet]                                    # Quiet mode. If don't need any messages in console.\r\n          [--digital-ocean-access-token=YOURLONGAPITOKEN]            # DIGITAL_OCEAN_ACCESS_TOKEN. if you can't use environment.\r\n          [--digital-ocean-client-id=YOURLONGAPICLIENTID]            # DIGITAL_OCEAN_CLIENT_ID. if you can't use environment.\r\n          [--digital-ocean-api-key=YOURLONGAPIKEY]                   # DIGITAL_OCEAN_API_KEY. if you can't use environment.    \r\n    \r\n    Description:\r\n      `do_snapshot` able to create and cleanup snapshots on your droplets.\r\n    \r\n      You can optionally specify parameters to select or exclude some droplets.   \r\n\r\n## You can ask, \"Why you made this tool?\"\r\n\r\n- First. I needed stable tool, which can provide for me automatic Snapshot feature for all of my Droplets via Cron planner.\r\n- I don't want to think how much snapshots for each droplet i have.\r\n- I don't wont to sleep when my droplets Offline!!! And i wanted tool which can BOOT back droplets, which failed to snapshot.\r\n- Also i want to understand what's going on if there some error. Mail is my choice. But logs also good.\r\n- And ... sure ;) We want to do it fast as rocket! :)\r\n- more more more...\r\n- So this tool can save a lot of time for people.\r\n\r\n## Donating:\r\nSupport this project and others by [merqlove](https://gratipay.com/~merqlove/) via [gratipay](https://gratipay.com/~merqlove/).  \r\n[![Support via Gratipay](https://cdn.rawgit.com/gratipay/gratipay-badge/2.3.0/dist/gratipay.png)](https://gratipay.com/merqlove/)\r\n\r\n## Dependencies:\r\n\r\n- [Thor](https://github.com/erikhuda/thor) for CLI.\r\n- [Barge](https://github.com/blom/barge) for API V2 requests.\r\n- [Pony](https://github.com/benprew/pony) for mail notifications.\r\n\r\n## Contributing\r\n\r\n1. Fork it ( https://github.com/merqlove/do_snapshot/fork )\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create a new Pull Request\r\n\r\n### Testing\r\n\r\n    $ rake spec \r\n\r\nCopyright (c) 2015 Alexander Merkulov\r\n\r\nMIT License\r\n",
  "google": "UA-52965116-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}